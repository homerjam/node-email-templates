{"version":3,"sources":["../src/email-template.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,QAAQ,qBAAM,gCAAN,CAAd;;IAEqB,a;AACnB,yBAAa,IAAb,EAAiC;AAAA,QAAd,OAAc,yDAAJ,EAAI;;AAAA;;AAC/B,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,OAAL,GAAe,oBAAS,IAAT,CAAf;AACA,SAAK,OAAL,GAAe,OAAf;AACA,UAAM,qCAAN,EAA6C,oBAAS,IAAT,CAA7C;AACC;AACD,SAAK,KAAL,GAAa,EAAb;AACD;;;;0BAEM,M,EAAQ;AAAA;;AACb,UAAI,CAAC,MAAL,EAAa,SAAS,OAAT;;AAEb,UAAI,CAAC,KAAK,KAAL,CAAW,MAAX,CAAL,EAAyB,KAAK,KAAL,CAAW,MAAX,IAAqB,EAAE,OAAO,EAAT,EAArB;;AAEzB,UAAI,KAAK,KAAL,CAAW,MAAX,EAAmB,QAAvB,EAAiC;AAC/B,eAAO,mBAAE,OAAF,EAAP,CAD+B,CACZ;AACpB;;AAED,YAAM,wBAAN;AACA,aAAO,4BAAiB,KAAK,IAAtB,EAA4B,MAA5B,EACN,IADM,CACD,UAAC,CAAD;AAAA,eAAO,MAAK,cAAL,CAAoB,CAApB,EAAuB,MAAvB,CAAP;AAAA,OADC,EAEN,IAFM,CAED,YAAM;AACV,cAAK,KAAL,CAAW,MAAX,EAAmB,QAAnB,GAA8B,IAA9B;AACA,cAAM,iCAAN;AACD,OALM,CAAP;AAMD;;;mCAEe,C,EAAG,M,EAAQ;AAAA;;AACzB,aAAO,mBAAE,GAAF,CAAM,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,SAA1B,CAAN,EAA4C,UAAC,IAAD,EAAU;AAC3D,eAAO,wBAAa,CAAb,EAAgB,IAAhB,CAAP;AACD,OAFM,EAGN,IAHM,CAGD,UAAC,KAAD,EAAW;AAAA,oCACoB,KADpB;;AAAA,YACV,IADU;AAAA,YACJ,IADI;AAAA,YACE,KADF;AAAA,YACS,OADT;;;AAGf,YAAI,CAAC,IAAD,IAAS,CAAC,IAAd,EAAoB;AAClB,cAAI,MAAM,IAAI,KAAJ,2EAAkF,OAAK,OAAvF,CAAV;AACA,cAAI,IAAJ,GAAW,QAAX;AACA,gBAAM,GAAN;AACD;;AAED,YAAI,IAAJ,EAAU;AACR,gBAAM,0BAAN,EAAkC,oBAAS,KAAK,QAAd,CAAlC,EAA2D,OAAK,OAAhE;AACD;AACD,eAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,CAAyB,IAAzB,GAAgC,IAAhC;;AAEA,YAAI,IAAJ,EAAU;AACR,gBAAM,0BAAN,EAAkC,oBAAS,KAAK,QAAd,CAAlC,EAA2D,OAAK,OAAhE;AACD;AACD,eAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,CAAyB,IAAzB,GAAgC,IAAhC;;AAEA,YAAI,KAAJ,EAAW;AACT,gBAAM,2BAAN,EAAmC,oBAAS,MAAM,QAAf,CAAnC,EAA6D,OAAK,OAAlE;AACD;AACD,eAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,CAAyB,KAAzB,GAAiC,KAAjC;;AAEA,YAAI,OAAJ,EAAa;AACX,gBAAM,wBAAN,EAAgC,oBAAS,QAAQ,QAAjB,CAAhC,EAA4D,OAAK,OAAjE;AACD;AACD,eAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,CAAyB,OAAzB,GAAmC,OAAnC;;AAEA,cAAM,2BAAN;AACD,OAjCM,CAAP;AAkCD;;;4BAEQ,Q,EAAU,M,EAAQ,M,EAAQ,Q,EAAU;AAAA;;AAC3C,UAAI,CAAC,MAAD,IAAY,CAAC,QAAD,IAAa,0BAAW,MAAX,CAA7B,EAAkD;AAChD,mBAAW,MAAX,CADgD,CAC9B;AAClB,iBAAS,OAAT;AACD;;AAED,2BAAmB,QAAnB;AACA,aAAO,KAAK,KAAL,CAAW,MAAX,EACN,IADM,CACD,YAAM;AACV,eAAO,OAAK,WAAL,CAAiB,QAAjB,EAA2B,MAA3B,EAAmC,MAAnC,CAAP;AACD,OAHM,EAIN,GAJM,CAIF;AAAA,eAAM,8BAA4B,QAA5B,CAAN;AAAA,OAJE,EAKN,OALM,CAKE,QALF,CAAP;AAMD;;;+BAEW,M,EAAQ,M,EAAQ,Q,EAAU;AACpC,aAAO,KAAK,OAAL,CAAa,MAAb,EAAqB,MAArB,EAA6B,MAA7B,EAAqC,QAArC,CAAP;AACD;;;kCAEc,M,EAAQ,M,EAAQ,Q,EAAU;AACvC,aAAO,KAAK,OAAL,CAAa,SAAb,EAAwB,MAAxB,EAAgC,MAAhC,EAAwC,QAAxC,CAAP;AACD;;;+BAEW,M,EAAQ,M,EAAQ,Q,EAAU;AAAA;;AACpC,UAAI,CAAC,MAAD,IAAY,CAAC,QAAD,IAAa,0BAAW,MAAX,CAA7B,EAAkD;AAChD,mBAAW,MAAX,CADgD,CAC9B;AAClB,iBAAS,OAAT;AACD;;AAED,YAAM,gBAAN;AACA,aAAO,KAAK,KAAL,CAAW,MAAX,EACN,IADM,CACD,YAAM;AACV,eAAO,mBAAE,GAAF,CAAM,CACX,OAAK,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,CADW,EAEX,OAAK,YAAL,CAAkB,MAAlB,EAA0B,MAA1B,CAFW,CAAN,CAAP;AAID,OANM,EAON,IAPM,CAOD,UAAC,OAAD,EAAa;AAAA,sCACG,OADH;;AAAA,YACZ,IADY;AAAA,YACN,KADM;;AAEjB,YAAI,CAAC,KAAL,EAAY,OAAO,IAAP;AACZ,YAAI,OAAK,OAAL,CAAa,YAAjB,EAA+B,OAAO,IAAP;AAC/B,YAAI,OAAK,OAAL,CAAa,YAAjB,EAA+B;AAC7B,gBAAM,sBAAN,EAA8B,OAAK,OAAL,CAAa,YAA3C;AACD;AACD,eAAO,gBAAM,aAAN,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,OAAK,OAAL,CAAa,YAAb,IAA6B,EAA9D,CAAP;AACD,OAfM,EAgBN,GAhBM,CAgBF;AAAA,eAAM,MAAM,yBAAN,CAAN;AAAA,OAhBE,EAiBN,OAjBM,CAiBE,QAjBF,CAAP;AAkBD;;;2BAEO,M,EAAQ,M,EAAQ,Q,EAAU;AAChC,UAAI,0BAAW,MAAX,CAAJ,EAAwB;AACtB,mBAAW,MAAX;AACA,iBAAS,EAAT;AACD,OAHD,MAGO,IAAI,MAAJ,EAAY;AACjB,iBAAS,sBAAO,EAAP,EAAW,MAAX,CAAT;AACD;;AAED,UAAI,CAAC,QAAD,IAAa,0BAAW,MAAX,CAAjB,EAAqC;AACnC,mBAAW,MAAX,CADmC,CACjB;AAClB,iBAAS,OAAT;AACD;;AAED,YAAM,mCAAN,EAA2C,MAA3C;;AAEA,aAAO,mBAAE,GAAF,CAAM,CACX,KAAK,UAAL,CAAgB,MAAhB,EAAwB,MAAxB,CADW,EAEX,KAAK,UAAL,CAAgB,MAAhB,EAAwB,MAAxB,CAFW,EAGX,KAAK,aAAL,CAAmB,MAAnB,EAA2B,MAA3B,CAHW,CAAN,EAKN,IALM,CAKD,UAAC,QAAD,EAAc;AAAA,uCACU,QADV;;AAAA,YACb,IADa;AAAA,YACP,IADO;AAAA,YACD,OADC;;AAElB,eAAO;AACL,oBADK,EACC,UADD,EACO;AADP,SAAP;AAGD,OAVM,EAWN,OAXM,CAWE,QAXF,CAAP;AAYD;;;iCAEa,M,EAAQ,M,EAAQ;AAAA;;AAC5B,aAAO,uBAAM,UAAC,OAAD,EAAa;AACxB;AACA,YAAI,OAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,KAA6B,SAAjC,EAA4C;AAC1C,iBAAO,QAAQ,OAAK,KAAL,CAAW,MAAX,EAAmB,KAA3B,CAAP;AACD;;AAED,YAAI,OAAK,OAAL,CAAa,WAAjB,EAA8B;AAC5B,mBAAS,sBAAO,EAAP,EAAW,MAAX,EAAmB,OAAK,OAAL,CAAa,WAAhC,CAAT;AACD;;AAED,cAAM,sBAAN;;AAEA,gBAAQ,OAAK,WAAL,CAAiB,OAAjB,EAA0B,MAA1B,EAAkC,MAAlC,EACP,IADO,CACF,UAAC,KAAD,EAAW;AACf,iBAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,GAA2B,KAA3B;AACA,gBAAM,+BAAN;AACA,iBAAO,KAAP;AACD,SALO,CAAR;AAMD,OAlBM,CAAP;AAmBD;;;gCAEY,I,EAAM,M,EAAQ,M,EAAQ;AAAA;;AACjC,aAAO,uBAAM,UAAC,OAAD,EAAU,MAAV,EAAqB;AAChC,YAAI,gBAAgB,QAAQ,OAAR,CAAgB,IAAhB,CAApB;;AAEA,YAAI,OAAK,OAAL,CAAa,aAAb,IAA8B,0BAAW,OAAK,OAAL,CAAa,aAAxB,CAAlC,EAA0E;AACxE,0BAAgB,OAAK,OAAL,CAAa,aAAb,CAA2B,IAA3B,EAAiC,OAAK,KAAL,CAAW,MAAX,EAAmB,KAApD,EAA2D,MAA3D,EAAmE,MAAnE,CAAhB;AACD;;AAED,sBAAc,IAAd,CAAmB,2BAAmB;AACpC,cAAI,eAAJ,EAAqB;AACnB,mBAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,CAAyB,IAAzB,IAAiC,eAAjC;AACD;;AAED,cAAI,CAAC,OAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,CAAyB,IAAzB,CAAL,EAAqC,OAAO,QAAQ,IAAR,CAAP;;AAErC,gCAAW,OAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,CAAyB,IAAzB,CAAX,EAA2C,MAA3C,EACG,IADH,CACQ,oBAAY;AAChB,gBAAI,iBAAiB,QAAQ,OAAR,CAAgB,QAAhB,CAArB;;AAEA,gBAAI,OAAK,OAAL,CAAa,cAAb,IAA+B,0BAAW,OAAK,OAAL,CAAa,cAAxB,CAAnC,EAA4E;AAC1E,+BAAiB,OAAK,OAAL,CAAa,cAAb,CAA4B,QAA5B,EAAsC,IAAtC,EAA4C,OAAK,KAAL,CAAW,MAAX,EAAmB,KAA/D,EAAsE,MAAtE,EAA8E,MAA9E,CAAjB;AACD;;AAED,2BAAe,IAAf,CAAoB,OAApB;AACD,WATH,EASK,MATL;AAUD,SAjBD;AAkBD,OAzBM,CAAP;AA0BD;;;;;;kBAjMkB,a","file":"email-template.js","sourcesContent":["import P from 'bluebird'\nimport Debug from 'debug'\nimport {basename} from 'path'\nimport juice from 'juice'\nimport isFunction from 'lodash/isFunction'\nimport assign from 'lodash/assign'\nimport {resolveTPLFolder, readContents, renderFile} from './util'\n\nconst debug = Debug('email-templates:email-template')\n\nexport default class EmailTemplate {\n  constructor (path, options = {}) {\n    this.path = path\n    this.dirname = basename(path)\n    this.options = options\n    debug('Creating Email template for path %s', basename(path))\n     // localized templates cache\n    this.ltpls = {}\n  }\n\n  _init (locale) {\n    if (!locale) locale = 'en-us'\n\n    if (!this.ltpls[locale]) this.ltpls[locale] = { files: {} }\n\n    if (this.ltpls[locale].isInited) {\n      return P.resolve() // i18n cache\n    }\n\n    debug('Initializing templates')\n    return resolveTPLFolder(this.path, locale)\n    .then((p) => this._loadTemplates(p, locale))\n    .then(() => {\n      this.ltpls[locale].isInited = true\n      debug('Finished initializing templates')\n    })\n  }\n\n  _loadTemplates (p, locale) {\n    return P.map(['html', 'text', 'style', 'subject'], (type) => {\n      return readContents(p, type)\n    })\n    .then((files) => {\n      let [html, text, style, subject] = files\n\n      if (!html && !text) {\n        let err = new Error(`Neither html nor text template files found or are both empty in path ${this.dirname}`)\n        err.code = 'ENOENT'\n        throw err\n      }\n\n      if (html) {\n        debug('Found HTML file %s in %s', basename(html.filename), this.dirname)\n      }\n      this.ltpls[locale].files.html = html\n\n      if (text) {\n        debug('Found text %s file in %s', basename(text.filename), this.dirname)\n      }\n      this.ltpls[locale].files.text = text\n\n      if (style) {\n        debug('Found stylesheet %s in %s', basename(style.filename), this.dirname)\n      }\n      this.ltpls[locale].files.style = style\n\n      if (subject) {\n        debug('Found subject %s in %s', basename(subject.filename), this.dirname)\n      }\n      this.ltpls[locale].files.subject = subject\n\n      debug('Finished loading template')\n    })\n  }\n\n  _render (template, locals, locale, callback) {\n    if (!locale || (!callback && isFunction(locale))) {\n      callback = locale // locale is optional\n      locale = 'en-us'\n    }\n\n    debug(`Rendering ${template}`)\n    return this._init(locale)\n    .then(() => {\n      return this._renderFile(template, locals, locale)\n    })\n    .tap(() => debug(`Finished rendering ${template}`))\n    .nodeify(callback)\n  }\n\n  renderText (locals, locale, callback) {\n    return this._render('text', locals, locale, callback)\n  }\n\n  renderSubject (locals, locale, callback) {\n    return this._render('subject', locals, locale, callback)\n  }\n\n  renderHtml (locals, locale, callback) {\n    if (!locale || (!callback && isFunction(locale))) {\n      callback = locale // locale is optional\n      locale = 'en-us'\n    }\n\n    debug('Rendering HTML')\n    return this._init(locale)\n    .then(() => {\n      return P.all([\n        this._renderFile('html', locals, locale),\n        this._renderStyle(locals, locale)\n      ])\n    })\n    .then((results) => {\n      let [html, style] = results\n      if (!style) return html\n      if (this.options.disableJuice) return html\n      if (this.options.juiceOptions) {\n        debug('Using juice options ', this.options.juiceOptions)\n      }\n      return juice.inlineContent(html, style, this.options.juiceOptions || {})\n    })\n    .tap(() => debug('Finished rendering HTML'))\n    .nodeify(callback)\n  }\n\n  render (locals, locale, callback) {\n    if (isFunction(locals)) {\n      callback = locals\n      locals = {}\n    } else if (locals) {\n      locals = assign({}, locals)\n    }\n\n    if (!callback && isFunction(locale)) {\n      callback = locale // locale is optional\n      locale = 'en-us'\n    }\n\n    debug('Rendering template with locals %j', locals)\n\n    return P.all([\n      this.renderHtml(locals, locale),\n      this.renderText(locals, locale),\n      this.renderSubject(locals, locale)\n    ])\n    .then((rendered) => {\n      let [html, text, subject] = rendered\n      return {\n        html, text, subject\n      }\n    })\n    .nodeify(callback)\n  }\n\n  _renderStyle (locals, locale) {\n    return new P((resolve) => {\n      // cached\n      if (this.ltpls[locale].style !== undefined) {\n        return resolve(this.ltpls[locale].style)\n      }\n\n      if (this.options.sassOptions) {\n        locals = assign({}, locals, this.options.sassOptions)\n      }\n\n      debug('Rendering stylesheet')\n\n      resolve(this._renderFile('style', locals, locale)\n      .then((style) => {\n        this.ltpls[locale].style = style\n        debug('Finished rendering stylesheet')\n        return style\n      }))\n    })\n  }\n\n  _renderFile (file, locals, locale) {\n    return new P((resolve, reject) => {\n      let preRenderHook = Promise.resolve(null)\n\n      if (this.options.preRenderHook && isFunction(this.options.preRenderHook)) {\n        preRenderHook = this.options.preRenderHook(file, this.ltpls[locale].files, locals, locale)\n      }\n\n      preRenderHook.then(preRenderResult => {\n        if (preRenderResult) {\n          this.ltpls[locale].files[file] = preRenderResult\n        }\n\n        if (!this.ltpls[locale].files[file]) return resolve(null)\n\n        renderFile(this.ltpls[locale].files[file], locals)\n          .then(rendered => {\n            let postRenderHook = Promise.resolve(rendered)\n\n            if (this.options.postRenderHook && isFunction(this.options.postRenderHook)) {\n              postRenderHook = this.options.postRenderHook(rendered, file, this.ltpls[locale].files, locals, locale)\n            }\n\n            postRenderHook.then(resolve)\n          }, reject)\n      })\n    })\n  }\n}\n"]}