{"version":3,"sources":["../src/template-manager.js"],"names":[],"mappings":"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","file":"template-manager.js","sourcesContent":["/**\n * Small utility module for compling HTML templates or pre-processed CSS.\n *\n * @author: [@jasonsims]('https://github.com/jasonsims')\n */\n\nimport {extname, dirname, basename} from 'path'\nimport cons from 'consolidate'\nimport P from 'bluebird'\n\nvar engineMap = {\n  // HTML Template engines\n  'html': renderDefault,\n  'hbs': cons.handlebars.render,\n  'emblem': renderEmblem,\n  // CSS pre-processors\n  'less': renderLess,\n  'stylus': renderStylus,\n  'styl': renderStyl,\n  'sass': renderSass,\n  'scss': renderSass,\n  // Handle plain CSS also\n  'css': renderDefault,\n  // Handle plain text\n  'txt': renderDefault,\n  // Handle missing extension\n  '': renderDefault\n}\n\nexport function render (file, locals = {}, callback) {\n  let {filename, content} = file\n\n  return new P(function (resolve, reject) {\n    if (!content) return reject('No content in template')\n    if (!filename) return reject('Filename is null')\n    let engine = extname(filename).slice(1)\n\n    locals.filename = filename\n    locals.engine = '.' + engine\n    locals.templatePath = dirname(filename)\n\n    if (engine.length && cons[engine] !== undefined) {\n      // use consolidate.js if it supports this engine\n      return cons[engine].render(content, locals, function (err, rendered) {\n        if (err) return reject(err)\n        resolve(rendered)\n      })\n    } else {\n      // or use the function defined in the engineMap\n      var fn = engineMap[engine]\n      return resolve(fn(content, locals))\n    }\n    return reject(`Can't render file with extension ${engine}`)\n  })\n  .nodeify(callback)\n}\n\n// Deprecated. This engine is deprecated since v2.0\nfunction renderEmblem (source, locals) {\n  const emblem = require('emblem')\n  const handlebars = require('handlebars')\n  console.warn('Please migrate your templates to other engine. Email Templates will stop supporting emblem on the next version')\n\n  var template = emblem.compile(handlebars, source)\n  return P.resolve(template(locals))\n}\n\n// CSS pre-processors\nfunction renderLess (source, locals) {\n  const less = require('less')\n  var dir = dirname(locals.filename)\n  var base = basename(locals.filename)\n\n  return new P(function (done, reject) {\n    less.render(source, {\n      paths: [dir],\n      filename: base\n    }, function (err, output) {\n      if (err) return reject(err)\n      done(output.css || output)\n    })\n  })\n}\n\nfunction renderStylus (source, locals) {\n  const stylus = require('stylus')\n\n  // Render stylus synchronously as it does not appear to handle asynchronous\n  // calls properly when an error is generated.\n  const css = stylus.render(source, locals)\n  return P.resolve(css)\n}\n\nfunction renderStyl (source, locals) {\n  const styl = require('styl')\n\n  const css = styl(source, locals).toString()\n  return P.resolve(css)\n}\n\nfunction renderSass (source, locals) {\n  const sass = require('node-sass')\n\n  locals.data = source\n\n  if (locals.includePaths) {\n    locals.includePaths = locals.includePaths.concat([locals.templatePath])\n  } else {\n    locals.includePaths = [locals.templatePath]\n  }\n\n  return new P(function (done, reject) {\n    sass.render(locals, function (err, data) {\n      if (err) return reject(err)\n      done(data.css.toString())\n    })\n  })\n}\n// Default wrapper for handling standard CSS and empty source.\nfunction renderDefault (source) {\n  return P.resolve(source)\n}\n"]}